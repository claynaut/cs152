FUNCTION
NUMBER main
SEMICOLON
BEGIN_PARAMS
END_PARAMS
BEGIN_LOCALS
NUMBER n
COLON
INTEGER
SEMICOLON
NUMBER i
COMMA
NUMBER j
COMMA
NUMBER k
COLON
INTEGER
SEMICOLON
NUMBER t
COLON
ARRAY
L_SQUARE_BRACKET
NUMBER 20
R_SQUARE_BRACKET
OF
INTEGER
SEMICOLON
NUMBER x
COLON
ENUM
L_PAREN
NUMBER Proc1
COMMA
NUMBER Proc2
R_PAREN
SEMICOLON
END_LOCALS
BEGIN_BODY
READ
NUMBER i
COMMA
NUMBER j
SEMICOLON
NUMBER k
ASSIGN
NUMBER 0
SEMICOLON
NUMBER n
ASSIGN
NUMBER 20
SEMICOLON
DO
BEGINLOOP
NUMBER t
L_SQUARE_BRACKET
NUMBER k
R_SQUARE_BRACKET
ASSIGN
NUMBER k
SEMICOLON
NUMBER k
ASSIGN
NUMBER k
ADD
NUMBER 1
SEMICOLON
IF
NUMBER k
MOD
NUMBER 2
EQ
NUMBER 0
THEN
CONTINUE
SEMICOLON
ENDIF
SEMICOLON
WRITE
NUMBER t
L_SQUARE_BRACKET
NUMBER k
SUB
NUMBER 1
R_SQUARE_BRACKET
SEMICOLON
ENDLOOP
WHILE
NUMBER k
LT
NUMBER n
SEMICOLON
IF
NUMBER i
LT
NUMBER j
AND
NUMBER j
LT
NUMBER n
AND
NUMBER i
GTE
NUMBER 0
THEN
NUMBER t
L_SQUARE_BRACKET
NUMBER i
R_SQUARE_BRACKET
ASSIGN
NUMBER i
MULT
NUMBER 2
SEMICOLON
NUMBER t
L_SQUARE_BRACKET
NUMBER j
R_SQUARE_BRACKET
ASSIGN
NUMBER j
MULT
NUMBER 2
SEMICOLON
NUMBER k
ASSIGN
NUMBER t
L_SQUARE_BRACKET
NUMBER i
R_SQUARE_BRACKET
SEMICOLON
NUMBER t
L_SQUARE_BRACKET
NUMBER i
R_SQUARE_BRACKET
ASSIGN
NUMBER t
L_SQUARE_BRACKET
NUMBER j
R_SQUARE_BRACKET
SEMICOLON
NUMBER t
L_SQUARE_BRACKET
NUMBER j
R_SQUARE_BRACKET
ASSIGN
NUMBER k
SEMICOLON
ELSE
WHILE
NUMBER i
GTE
NUMBER j
OR
FALSE
BEGINLOOP
NUMBER k
ASSIGN
L_PAREN
NUMBER 1
ADD
NUMBER i
SUB
NUMBER j
R_PAREN
MOD
NUMBER 3
SEMICOLON
NUMBER i
ASSIGN
NUMBER i
SUB
NUMBER 1
SEMICOLON
IF
NUMBER k
GT
NUMBER 1
THEN
CONTINUE
SEMICOLON
ENDIF
SEMICOLON
WRITE
NUMBER k
SEMICOLON
ENDLOOP
SEMICOLON
ENDIF
SEMICOLON
WRITE
NUMBER i
COMMA
NUMBER j
COMMA
NUMBER k
SEMICOLON
IF
NUMBER i
LT
NUMBER n
AND
NUMBER i
GTE
NUMBER 0
THEN
WRITE
NUMBER t
L_SQUARE_BRACKET
NUMBER i
R_SQUARE_BRACKET
SEMICOLON
ENDIF
SEMICOLON
IF
NUMBER j
LT
NUMBER n
AND
NUMBER j
GTE
NUMBER 0
THEN
WRITE
NUMBER t
L_SQUARE_BRACKET
NUMBER j
R_SQUARE_BRACKET
SEMICOLON
ENDIF
SEMICOLON
END_BODY
